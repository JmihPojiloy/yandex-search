@model List<SearchResult>

@{
    ViewData["Title"] = "Yandex Search";
}

<h2>Yandex Search</h2>

<form method="post" asp-action="Index">
    <label for="SearchKeyword">Search Keyword:</label>
    <input type="text" id="SearchKeyword" name="SearchKeyword" required />

    <label for="StartIndex">Start Index:</label>
    <input type="number" id="StartIndex" name="StartIndex" value="0" />

    <label for="PageSize">Page Size:</label>
    <input type="number" id="PageSize" name="PageSize" value="10" />

    <label for="SearchPattern">Search Pattern:</label>
    <input type="text" id="SearchPattern" name="SearchPattern" />

    <button type="submit">Search</button>
</form>

@if (Model != null && Model.Any())
{
    <h3>Search Results</h3>
    <p>Total time taken: @ViewBag.TotalTimeTaken seconds</p>

    <table class="results-table">
        <thead>
            <tr>
                <th>Requested URL</th>
                <th>Page Title</th>
                <th>Time Taken (s)</th>
                <th>Search Pattern Count</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var result in Model)
            {
                <tr>
                    <td class="result-cell">@result.RequestedUrl</td>
                    <td class="result-cell">@result.PageTitle</td>
                    <td class="result-cell">@result.TimeTaken</td>
                    <td class="result-cell">@result.SearchPatternCount</td>
                </tr>
            }
        </tbody>
    </table>

    <button id="exportJsonButton">Export to JSON</button>

    <script>
        document.getElementById('exportJsonButton').addEventListener('click', function () {
            fetch('@Url.Action("ExportToJson")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(@Html.Raw(Json.Serialize(Model)))
            })
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'results.json';
                    a.click();
                    window.URL.revokeObjectURL(url);
                })
                .catch(error => console.error('Error exporting JSON:', error));
        });
    </script>
}
else if (Model != null && !Model.Any())
{
    <p>No results found.</p>
}

<style>
    .results-table {
        width: 100%;
        border-collapse: collapse;
    }

    .results-table th, .results-table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .results-table th {
        background-color: #f4f4f4;
    }

    .result-cell {
        max-width: 200px; 
        overflow: hidden; 
        text-overflow: ellipsis;
        white-space: nowrap; 
    }

    #exportJsonButton {
        margin-top: 10px;
        padding: 8px 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    #exportJsonButton:hover {
        background-color: #0056b3;
    }
</style>
